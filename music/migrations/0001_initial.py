# Generated by Django 4.2.8 on 2023-12-14 19:02

import core.snowflake
import core.uploads
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import functools
import music.models.playlist
import music.models.playlist_attachment
import music.models.playlist_interaction
import music.models.playlist_item
import stator.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0022_follow_request"),
    ]

    operations = [
        migrations.CreateModel(
            name="Playlist",
            fields=[
                ("state_changed", models.DateTimeField(auto_now_add=True)),
                ("state_next_attempt", models.DateTimeField(blank=True, null=True)),
                (
                    "state_locked_until",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "playlist",
                    models.SlugField(max_length=100, primary_key=True, serialize=False),
                ),
                (
                    "name_override",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("public", models.BooleanField(null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "state",
                    stator.models.StateField(
                        choices=[("outdated", "outdated"), ("updated", "updated")],
                        default="outdated",
                        graph=music.models.playlist.PlaylistStates,
                        max_length=100,
                    ),
                ),
                ("stats", models.JSONField(blank=True, null=True)),
                ("stats_updated", models.DateTimeField(blank=True, null=True)),
                ("aliases", models.JSONField(blank=True, null=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PlaylistItem",
            fields=[
                ("state_changed", models.DateTimeField(auto_now_add=True)),
                ("state_next_attempt", models.DateTimeField(blank=True, null=True)),
                (
                    "state_locked_until",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "id",
                    models.BigIntegerField(
                        default=core.snowflake.Snowflake.generate_post_interaction,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "state",
                    stator.models.StateField(
                        choices=[
                            ("new", "new"),
                            ("fanned_out", "fanned_out"),
                            ("undone", "undone"),
                            ("undone_fanned_out", "undone_fanned_out"),
                        ],
                        default="new",
                        graph=music.models.playlist_item.PlaylistItemStates,
                        max_length=100,
                    ),
                ),
                (
                    "object_uri",
                    models.CharField(
                        blank=True, max_length=500, null=True, unique=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("boost", "Boost"),
                            ("vote", "Vote"),
                            ("pin", "Pin"),
                        ],
                        max_length=100,
                    ),
                ),
                ("operation", models.CharField(default="add")),
                ("number", models.IntegerField(default=0)),
                ("name", models.TextField(blank=True, null=True)),
                ("version", models.TextField(blank=True, null=True)),
                ("media_type", models.CharField(default="music")),
                ("creator_name", models.TextField(blank=True, null=True)),
                ("release_name", models.TextField(blank=True, null=True)),
                ("isrc", models.CharField(blank=True, max_length=55, null=True)),
                ("isni", models.CharField(blank=True, max_length=255, null=True)),
                ("upc", models.CharField(blank=True, max_length=255, null=True)),
                ("value", models.CharField(blank=True, max_length=50, null=True)),
                ("published", models.DateTimeField(default=django.utils.timezone.now)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "identity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlist_items",
                        to="users.identity",
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="music_items",
                        to="music.playlist",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlaylistInteraction",
            fields=[
                ("state_changed", models.DateTimeField(auto_now_add=True)),
                ("state_next_attempt", models.DateTimeField(blank=True, null=True)),
                (
                    "state_locked_until",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "id",
                    models.BigIntegerField(
                        default=core.snowflake.Snowflake.generate_post_interaction,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "state",
                    stator.models.StateField(
                        choices=[
                            ("new", "new"),
                            ("fanned_out", "fanned_out"),
                            ("undone", "undone"),
                            ("undone_fanned_out", "undone_fanned_out"),
                        ],
                        default="new",
                        graph=music.models.playlist_interaction.PlaylistInteractionStates,
                        max_length=100,
                    ),
                ),
                (
                    "object_uri",
                    models.CharField(
                        blank=True, max_length=500, null=True, unique=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("boost", "Boost"),
                            ("vote", "Vote"),
                            ("pin", "Pin"),
                        ],
                        max_length=100,
                    ),
                ),
                ("value", models.CharField(blank=True, max_length=50, null=True)),
                ("published", models.DateTimeField(default=django.utils.timezone.now)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "identity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlist_identity_interactions",
                        to="users.identity",
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlist_interactions",
                        to="music.playlist",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlaylistAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("state_changed", models.DateTimeField(auto_now_add=True)),
                ("state_next_attempt", models.DateTimeField(blank=True, null=True)),
                (
                    "state_locked_until",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "state",
                    stator.models.StateField(
                        choices=[("new", "new"), ("fetched", "fetched")],
                        default="new",
                        graph=music.models.playlist_attachment.PlaylistAttachmentStates,
                        max_length=100,
                    ),
                ),
                ("mimetype", models.CharField(max_length=200)),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=functools.partial(
                            core.uploads.upload_namer, *("attachments",), **{}
                        ),
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=functools.partial(
                            core.uploads.upload_namer, *("attachment_thumbnails",), **{}
                        ),
                    ),
                ),
                ("remote_url", models.CharField(blank=True, max_length=500, null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("focal_x", models.FloatField(blank=True, null=True)),
                ("focal_y", models.FloatField(blank=True, null=True)),
                ("blurhash", models.TextField(blank=True, null=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlist_author_attachments",
                        to="users.identity",
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlist_attachments",
                        to="music.playlist",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="playlist",
            index=models.Index(
                fields=["state", "state_next_attempt", "state_locked_until"],
                name="ix_playlist_state_next",
            ),
        ),
        migrations.AddIndex(
            model_name="playlistitem",
            index=models.Index(
                fields=["type", "identity", "playlist"],
                name="music_playl_type_f1144c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="playlistitem",
            index=models.Index(
                fields=["state", "state_next_attempt", "state_locked_until"],
                name="ix_playlistite_state_next",
            ),
        ),
        migrations.AddIndex(
            model_name="playlistinteraction",
            index=models.Index(
                fields=["type", "identity", "playlist"],
                name="music_playl_type_fb7eee_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="playlistinteraction",
            index=models.Index(
                fields=["state", "state_next_attempt", "state_locked_until"],
                name="ix_playlistint_state_next",
            ),
        ),
        migrations.AddIndex(
            model_name="playlistattachment",
            index=models.Index(
                fields=["state", "state_next_attempt", "state_locked_until"],
                name="ix_playlistatt_state_next",
            ),
        ),
    ]
